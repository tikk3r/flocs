Bootstrap: yum
OSVersion: 7
MirrorURL: http://mirror.centos.org/centos-%{OSVERSION}/%{OSVERSION}/os/$basearch/
Include: yum



%environment
    export INSTALLDIR=/opt/lofar
    . $INSTALLDIR/init.sh

%post
	# General environment settings.
	export J=6
	export INSTALLDIR=/opt/ddf
	export PYTHON_VERSION=2.7

	# Path to where the patch for python-casacore's setup is stored.
	export PYTHON_CASACORE_PATCH=$INSTALLDIR/python-casacore/python_casacore_setup_patch.patch
    export PATCH_KILLMS_MAKEFILE_PREDICT=$INSTALLDIR/patches/patch_killms_predict.patch
    export PATCH_KILLMS_MAKEFILE_ARRAY=$INSTALLDIR/patches/patch_killms_array.patch
    export PATCH_KILLMS_MAKEFILE_GRIDDER=$INSTALLDIR/patches/patch_killms_gridder.patch

	# Settings relevant to the installed software.
	export BLAS_VERSION=0.2.17
	export BOOST_DOT_VERSION=1.63.0
	export BOOST_VERSION=1_63_0
	export CASACORE_VERSION=v2.4.1
	# Leave at latest, release versions crash for some reason.
	export CASAREST_VERSION=latest
	export CFITSIO_VERSION=3410
	export FFTW_VERSION=3.3.4
	export GLS_VERSION=1.15
	export HDF5_VERSION=1.10.1
	export LAPACK_VERSION=3.6.0
	export OPENBLAS_VERSION=v0.3.2
	export PYTHON_CASACORE_VERSION=v2.2.1

	yum -y remove iputils
	yum -y update
	yum -y install patch sudo yum-utils
	yum -y install git svn wget
	yum -y install automake-devel aclocal autoconf autotools cmake make
	yum -y install g++ gcc gcc-c++ gcc-gfortran
	yum -y install arpack-devel blas-devel boost boost-devel boost-python fftw3-devel fftw3-libs python-devel lapack-devel libpng-devel libxml2-devel numpy-devel readline-devel ncurses-devel f2py bzip2-devel libicu-devel scipy python-setuptools gsl gsl-devel
	yum -y install bison flex ncurses tar bzip2 which gettext
	yum -y install epel-release
	yum -y install cmake3
	yum -y install python-pip
	yum -y remove numpy
	pip install --upgrade pip
	pip install --upgrade setuptools
	pip install --upgrade numpy astropy scipy matplotlib numexpr tables
	pip install --upgrade boost pp progressbar pyfits pywcs python-monetdb xmlrunner unittest2
    pip install --upgrade nose cython numpy SharedArray Polygon2 pyFFTW astropy deap ipdb pyephem numexpr astro-kittens meqtrees-cattery owlcat astLib psutil py-cpuinfo tables prettytable pybind11 pyfits

	# FACTOR requisites.
	pip install pyparsing

    mkdir -p $INSTALLDIR/patches
    wget
    
	#
	# Install Boost.Python
	#
	mkdir -p $INSTALLDIR/boost/src
	cd $INSTALLDIR && wget https://dl.bintray.com/boostorg/release/${BOOST_DOT_VERSION}/source/boost_${BOOST_VERSION}.tar.gz
	cd $INSTALLDIR && tar xzf boost_${BOOST_VERSION}.tar.gz -C boost && cd boost/boost_${BOOST_VERSION} && ./bootstrap.sh --prefix=$INSTALLDIR/boost && ./b2 headers && ./b2 install --prefix=$INSTALLDIR/boost --with=all -j $J

	#
	# Install OpenBLAS
	#
	mkdir -p $INSTALLDIR/openblas/
	cd $INSTALLDIR/openblas/ && git clone https://github.com/xianyi/OpenBLAS.git src && cd src && git checkout $OPENBLAS_VERSION
	cd $INSTALLDIR/openblas/src && make -j $J && make install PREFIX=$INSTALLDIR/openblas
	rm -rf $INSTALLDIR/openblas/src

	#
	# Install SuperLU
	#
	mkdir -p $INSTALLDIR/superlu/build
	cd $INSTALLDIR/superlu/ && git clone https://github.com/xiaoyeli/superlu.git src && cd src && git checkout $SUPERLU_VERSION
	cd $INSTALLDIR/superlu/build && cmake ../src -DCMAKE_INSTALL_PREFIX=$INSTALLDIR/superlu -DUSE_XSDK_DEFAULTS=TRUE -Denable_blaslib=OFF -DBLAS_LIBRARY=$INSTALLDIR/openblas/lib/libopenblas.so && make -j $j && make install
	rm -rf $INSTALLDIR/superlu/src

	#
	# Install Armadillo
	#
	mkdir -p $INSTALLDIR/armadillo/
	cd $INSTALLDIR/armadillo && wget http://sourceforge.net/projects/arma/files/armadillo-$ARMADILLO_VERSION.tar.xz && tar xf armadillo-$ARMADILLO_VERSION.tar.xz && rm armadillo-$ARMADILLO_VERSION.tar.xz
	cd $INSTALLDIR/armadillo/armadillo-$ARMADILLO_VERSION && ./configure && cmake . -DCMAKE_INSTALL_PREFIX:PATH=$INSTALLDIR/armadillo -Dopenblas_LIBRARY:FILEPATH=$INSTALLDIR/openblas/lib/libopenblas.so  -DSuperLU_INCLUDE_DIR:PATH=$INSTALLDIR/superlu/include -DSuperLU_LIBRARY:FILEPATH=$INSTALLDIR/superlu/lib64/libsuperlu.so && make -j $J && make install


	#
	# install-cfitsio
	#
	mkdir -p ${INSTALLDIR}/cfitsio/build
	cd ${INSTALLDIR}/cfitsio && wget --retry-connrefused ftp://anonymous@heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio${CFITSIO_VERSION}.tar.gz
	cd ${INSTALLDIR}/cfitsio && tar xf cfitsio${CFITSIO_VERSION}.tar.gz
	cd ${INSTALLDIR}/cfitsio/build && cmake -DCMAKE_INSTALL_PREFIX=${INSTALLDIR}/cfitsio/ ../cfitsio
	cd ${INSTALLDIR}/cfitsio/build && make -j ${J}
	cd ${INSTALLDIR}/cfitsio/build && make install

	#
	# install-wcslib
	#
	mkdir ${INSTALLDIR}/wcslib
	if [ "${WCSLIB_VERSION}" = "latest" ]; then cd ${INSTALLDIR}/wcslib && wget --retry-connrefused ftp://anonymous@ftp.atnf.csiro.au/pub/software/wcslib/wcslib.tar.bz2 -O wcslib-latest.tar.bz2; fi
	if [ "${WCSLIB_VERSION}" != "latest" ]; then cd ${INSTALLDIR}/wcslib && wget --retry-connrefused ftp://anonymous@ftp.atnf.csiro.au/pub/software/wcslib/wcslib-${WCSLIB_VERSION}.tar.bz2; fi
	cd ${INSTALLDIR}/wcslib && tar xf wcslib-*.tar.bz2
	#cd ${INSTALLDIR} && mkdir wcslib && cd wcslib && svn checkout https://github.com/astropy/astropy/trunk/cextern/wcslib
	cd ${INSTALLDIR}/wcslib/wcslib* && ./configure --prefix=${INSTALLDIR}/wcslib --with-cfitsiolib=${INSTALLDIR}/cfitsio/lib/ --with-cfitsioinc=${INSTALLDIR}/cfitsio/include/ --without-pgplot
	cd ${INSTALLDIR}/wcslib/wcslib* && make -j $J
	cd ${INSTALLDIR}/wcslib/wcslib* && make install
	#yum -y install wcslib wcslib-devel

	#
	# Install CASAcore
	#
	mkdir -p ${INSTALLDIR}/casacore/build
	mkdir -p ${INSTALLDIR}/casacore/data
	cd $INSTALLDIR/casacore && git clone https://github.com/casacore/casacore.git src
	if [ "${CASACORE_VERSION}" != "latest" ]; then cd ${INSTALLDIR}/casacore/src && git checkout tags/${CASACORE_VERSION}; fi
	cd ${INSTALLDIR}/casacore/data && wget --retry-connrefused ftp://anonymous@ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar
	cd ${INSTALLDIR}/casacore/data && tar xf WSRT_Measures.ztar
	cd ${INSTALLDIR}/casacore/build && cmake -DCMAKE_INSTALL_PREFIX=${INSTALLDIR}/casacore/ -DDATA_DIR=${INSTALLDIR}/casacore/data -DWCSLIB_ROOT_DIR=/${INSTALLDIR}/wcslib/ -DCFITSIO_ROOT_DIR=${INSTALLDIR}/cfitsio/ -DBUILD_PYTHON=True -DUSE_OPENMP=True -DUSE_FFTW3=TRUE -DUSE_HDF5=True -DBLAS_blas_LIBRARY=$INSTALLDIR/openblas/lib/libopenblas.so -DBOOST_LIBRARYDIR=$INSTALLDIR/boost_1_63_0/lib -DBOOST_INCLUDEDIR=$INSTALLDIR/boost_1_63_0/include ../src/ 
	cd ${INSTALLDIR}/casacore/build && make -j ${J}
	cd ${INSTALLDIR}/casacore/build && make install

	#
	# Install-python-casacore
	#
	# Finding libraries is broken, patch the setup to include the previously installed boost and casacore libraries.
	export PYTHON_VERSION=2.7
	mkdir ${INSTALLDIR}/python-casacore
	cd ${INSTALLDIR}/python-casacore && git clone https://github.com/casacore/python-casacore && wget https://raw.githubusercontent.com/tikk3r/lofar-grid-hpccloud/master/python_casacore_setup_patch.patch
	if [ "$PYTHON_CASACORE_VERSION" != "latest" ]; then cd ${INSTALLDIR}/python-casacore/python-casacore && git checkout tags/${PYTHON_CASACORE_VERSION}; fi
	cd ${INSTALLDIR}/python-casacore/python-casacore && patch setup.py $PYTHON_CASACORE_PATCH && ./setup.py build_ext -I${INSTALLDIR}/wcslib/include:${INSTALLDIR}/casacore/include/:${INSTALLDIR}/cfitsio/include:${INSTALLDIR}/boost_1_63_0/include -L${INSTALLDIR}/wcslib/lib:${INSTALLDIR}/casacore/lib/:${INSTALLDIR}/cfitsio/lib/:${INSTALLDIR}/boost_1_63_0/lib:/usr/lib64/
	mkdir -p ${INSTALLDIR}/python-casacore/lib/python${PYTHON_VERSION}/site-packages/
	mkdir -p ${INSTALLDIR}/python-casacore/lib64/python${PYTHON_VERSION}/site-packages/
	export PYTHONPATH=${INSTALLDIR}/python-casacore/lib/python${PYTHON_VERSION}/site-packages:${INSTALLDIR}/python-casacore/lib64/python${PYTHON_VERSION}/site-packages:$PYTHONPATH && cd ${INSTALLDIR}/python-casacore/python-casacore && ./setup.py install --prefix=${INSTALLDIR}/python-casacore/
    
    #
    # Install killMS
    #
    mkdir -p $INSTALLDIR
    cd $INSTALLDIR && git clone --single-branch -b MergeDDFMAster https://github.com/cyriltasse/killMS.git
    cd killMS
    patch $INSTALLDIR/killMS/Predict/Makefile $PATCH_KILLMS_MAKEFILE_PREDICT
    patch $INSTALLDIR/killMS/Array/Dot/Makefile $PATCH_KILLMS_MAKEFILE_ARRAY
    patch $INSTALLDIR/killMS/Gridder/Makefile $PATCH_KILLMS_MAKEFILE_GRIDDER
    cd $INSTALLDIR/killMS/Predict && make
    cd $INSTALLDIR/killMS/Array/Dot && make
    cd $INSTALLDIR/killMS/Gridder && make

    #
    # Install DDFacet
    #
    export PATH=$INSTALLDIR/casacore/bin:$PATH
    export PYTHONPATH=$INSTALLDIR/python-casacore/lib/python2.7/site-packages:$INSTALLDIR/python-casacore/lib64/python2.7/site-packages:$PYTHONPATH
    export LD_LIBRARY_PATH=$INSTALLDIR/casacore/lib:$LD_LIBRARY_PATH
    mkdir -p $INSTALLDIR/DDFacet
    cd $INSTALLDIR/DDFacet && git clone --single-branch -b ddf_pipeline_fixes_may18 https://github.com/cyriltasse/DDFacet.git src   
    cd src && python setup.py install --prefix=$INSTALLDIR/DDFacet

    #
    # Install ddf-pipeline
    #
    cd $INSTALLDIR && git clone https://github.com/mhardcastle/ddf-pipeline.git

	echo "Installation directory contents:"
	ls ${INSTALLDIR}

    rm -rf ${INSTALLDIR}/lofar/src
    rm -rf ${INSTALLDIR}/lofar/build/gnu_opt
    rm -rf ${INSTALLDIR}/casacore/src
	rm -rf ${INSTALLDIR}/casarest/src
    yum -y clean all

	#
	# init-lofar
	#
	echo export INSTALLDIR=$INSTALLDIR > $INSTALLDIR/init.sh

    #
    # entrypoint
    #
%runscript
    echo source $INSTALLDIR/init.sh >> $HOME/.bashrc
    . $INSTALLDIR/init.sh
